{
  "openapi": "3.0.1",
  "info": {
    "title": "TWEP",
    "description": "TWEP API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "local server"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "role": {
            "type": "string"
          },
          "wallet": {
            "type": "number",
            "format": "float"
          },
          "tickets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ticket"
            }
          }
        },
        "required": [
          "email",
          "password"
        ],
        "example": {
          "id": 1,
          "email": "user@example.com",
          "password": "Password123",
          "role": "user",
          "wallet": 100
        }
      },
      "UserLogin": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "BikeType": {
        "type": "string",
        "enum": [
          "Mountain Bike",
          "City Bike",
          "Electric Bike",
          "Children Bike"
        ]
      },
      "PurchaseTicket": {
        "type": "object",
        "properties": {
          "bikeType": {
            "$ref": "#/components/schemas/BikeType"
          },
          "station": {
            "type": "string"
          },
          "purchaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "immediateRenting": {
            "type": "boolean"
          },
          "reservedStation": {
            "type": "string"
          }
        },
        "required": [
          "bikeType",
          "station",
          "purchaseDate",
          "immediateRenting"
        ],
        "example": {
          "bikeType": "Mountain Bike",
          "station": "Station A",
          "purchaseDate": "2024-01-10T08:00:00Z",
          "immediateRenting": true,
          "reservedStation": "Station B"
        }
      },
      "Ticket": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "bikeType": {
            "$ref": "#/components/schemas/BikeType"
          },
          "station": {
            "type": "string"
          },
          "purchaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "immediateRenting": {
            "type": "boolean"
          },
          "reservedStation": {
            "type": "string"
          }
        },
        "required": [
          "bikeType",
          "station",
          "purchaseDate",
          "immediateRenting"
        ],
        "example": {
          "id": 1,
          "bikeType": "Mountain Bike",
          "station": "Station A",
          "purchaseDate": "2024-01-10T08:00:00Z",
          "immediateRenting": true,
          "reservedStation": "Station B"
        }
      },
      "CreateStation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "properties": {
              "latitude": {
                "type": "number",
                "format": "float"
              },
              "longitude": {
                "type": "number",
                "format": "float"
              }
            },
            "required": [
              "latitude",
              "longitude"
            ]
          },
          "operational": {
            "type": "boolean"
          },
          "parkingPlaces": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bike_categories": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                },
                "occupied": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "Station": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "properties": {
              "latitude": {
                "type": "number",
                "format": "float"
              },
              "longitude": {
                "type": "number",
                "format": "float"
              }
            },
            "required": [
              "latitude",
              "longitude"
            ]
          },
          "operational": {
            "type": "boolean"
          },
          "parkingPlaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParkingPlace"
            }
          }
        },
        "example": {
          "id": "uuid",
          "name": "Bike Station 1",
          "location": {
            "latitude": 40.7128,
            "longitude": -74.006
          },
          "parkingPlaces": [
            {
              "id": "uuid",
              "bikeCategories": [
                {
                  "id": "uuid",
                  "name": "Mountain Bike"
                },
                {
                  "id": "uuid",
                  "name": "Electric Bike"
                }
              ],
              "occupied": true
            }
          ],
          "operational": true
        }
      },
      "UpsertStation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "properties": {
              "latitude": {
                "type": "number",
                "format": "float"
              },
              "longitude": {
                "type": "number",
                "format": "float"
              }
            },
            "required": [
              "latitude",
              "longitude"
            ]
          },
          "parkingPlaces": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bikeCategories": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "An array of existing category ids"
                },
                "occupied": {
                  "type": "boolean",
                  "description": "If the parking place is occupied or not"
                }
              }
            }
          },
          "operational": {
            "type": "boolean"
          }
        }
      },
      "Review": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "userId": {
            "type": "integer",
            "description": "The ID of the user submitting the review"
          },
          "stationId": {
            "type": "string",
            "format": "uuid",
            "description": "The ID of the station to which the review is bound"
          },
          "rating": {
            "type": "integer",
            "description": "The rating given by the user ( 1 to 5)"
          },
          "comment": {
            "type": "string",
            "description": "Optional comment provided by the user"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the review was submitted"
          }
        },
        "required": [
          "userId",
          "stationId",
          "rating"
        ],
        "example": {
          "userId": 1,
          "stationId": "uuid",
          "rating": 4,
          "comment": "Great experience!",
          "createdAt": "2024-01-20T12:30:00Z"
        }
      },
      "ParkingPlace": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "occupied": {
            "type": "boolean",
            "description": "If the parking place is occupied or not"
          },
          "bikeCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BikeCategory"
            }
          }
        }
      },
      "BikeCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        },
        "example": {
          "error": "Some error message"
        }
      },
      "IndividualBike": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "bikeType": {
            "type": "string",
            "enum": [
              "mountain_bike",
              "city_bike",
              "electric_bike",
              "children_bike"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "available",
              "rented",
              "unavailable"
            ]
          },
          "bikeModel": {
            "$ref": "#/components/schemas/BikeModel"
          }
        },
        "required": [
          "bikeType",
          "status",
          "bikeModel"
        ],
        "example": {
          "id": "uuid",
          "bikeType": "mountain_bike",
          "status": "available",
          "bikeModel": {
            "name": "Mountain Bike XL",
            "description": "A robust mountain bike for off-road adventures",
            "wheelSize": 29.5,
            "extraFeatures": [
              "Shimano XT gears",
              "Front suspension with 120mm travel"
            ],
            "bikeCategory": {
              "id": "uuid",
              "name": "Mountain Bike"
            }
          }
        }
      },
      "BikeModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "wheelSize": {
            "type": "number",
            "format": "float"
          },
          "extraFeatures": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "bikeCategory": {
            "$ref": "#/components/schemas/BikeCategory"
          }
        },
        "required": [
          "name",
          "wheelSize"
        ],
        "example": {
          "name": "Mountain Bike XL",
          "description": "A robust mountain bike for off-road adventures",
          "wheelSize": 29.5,
          "extraFeatures": [
            "Shimano XT gears",
            "Front suspension with 120mm travel"
          ]
        }
      }
    }
  },
  "paths": {
    "/users/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "user"
        ],
        "requestBody": {
          "description": "User registration details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "example": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "User login",
        "tags": [
          "user"
        ],
        "requestBody": {
          "description": "User login details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "example": {
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "Invalid credentials"
                }
              }
            }
          }
        }
      }
    },
    "/users/profile": {
      "get": {
        "summary": "Get user profile",
        "tags": [
          "user"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "example": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "User not found"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/account": {
      "get": {
        "summary": "Get user account details",
        "tags": [
          "user"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The ID of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "example": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "User not found"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/account/add-money": {
      "post": {
        "summary": "Add money to user's wallet",
        "tags": [
          "user"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The ID of the user"
          }
        ],
        "requestBody": {
          "description": "Amount to add to the wallet",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "float"
                  }
                },
                "required": [
                  "amount"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Wallet updated successfully",
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "email": "user@example.com",
                  "wallet": 150
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Invalid input data"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "User not found"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/tickets": {
      "get": {
        "summary": "Get user's ticket history",
        "tags": [
          "user"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The ID of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "example": {
                  "tickets": [
                    {
                      "id": 1,
                      "bikeType": "Mountain Bike",
                      "station": "Station A",
                      "purchaseDate": "2024-01-10T08:00:00Z"
                    },
                    {
                      "id": 2,
                      "bikeType": "City Bike",
                      "station": "Station B",
                      "purchaseDate": "2024-01-15T10:30:00Z"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "User not found"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Purchase a new ticket",
        "tags": [
          "user"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The ID of the user"
          }
        ],
        "requestBody": {
          "description": "Ticket details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseTicket"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ticket purchased successfully",
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "bikeType": "Mountain Bike",
                  "station": "Station A",
                  "purchaseDate": "2024-01-10T08:00:00Z",
                  "immediateRenting": true,
                  "reservedStation": "Station B"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Insufficient funds in the wallet for ticket purchase"
                }
              }
            }
          }
        }
      }
    },
    "/users/stations": {
      "get": {
        "summary": "Get list of bike stations",
        "tags": [
          "station"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "example": {
                  "stations": [
                    {
                      "id": "uuid",
                      "name": "Bike Station 1",
                      "location": {
                        "latitude": 40.7128,
                        "longitude": -74.006
                      },
                      "parkingPlaces": [
                        {
                          "id": "uuid",
                          "bikeCategories": [
                            "city_bike",
                            "mountain_bike"
                          ]
                        }
                      ],
                      "operational": true
                    },
                    {
                      "id": "uuid",
                      "name": "Bike Station 2",
                      "location": {
                        "latitude": 40.73,
                        "longitude": -73.995
                      },
                      "parkingPlaces": [
                        {
                          "id": "uuid",
                          "bikeCategories": [
                            "electric_bike",
                            "children_bike"
                          ]
                        }
                      ],
                      "operational": true
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Stations not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "Stations not found"
                }
              }
            }
          }
        }
      }
    },
    "/users/stations/{stationId}/bikes": {
      "get": {
        "summary": "Get list of bikes available at a specific station",
        "tags": [
          "bike"
        ],
        "parameters": [
          {
            "name": "stationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The ID of the station"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "example": {
                  "bikes": [
                    {
                      "id": "uuid",
                      "status": "available",
                      "category": "Electric Bike",
                      "model": "Model X",
                      "description": "Electric Bike, powerful motor",
                      "wheelSize": 26.5,
                      "extraFeatures": [
                        "Front suspension",
                        "GPS device"
                      ],
                      "parkingPlaceId": "c2c6b68e-759c-496a-a860-ee27c8874884"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Station not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "Station not found"
                }
              }
            }
          }
        }
      }
    },
    "/users/stations/{id}": {
      "get": {
        "summary": "Get details of a specific bike station",
        "tags": [
          "station"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The ID of the station"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "example": {
                  "id": "uuid",
                  "name": "Bike Station 1",
                  "location": {
                    "latitude": 40.7128,
                    "longitude": -74.006
                  },
                  "parkingPlaces": [
                    {
                      "id": "uuid",
                      "bikeCategories": [
                        "city_bike",
                        "mountain_bike"
                      ]
                    }
                  ],
                  "operational": true
                }
              }
            }
          },
          "404": {
            "description": "Station not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "Station not found"
                }
              }
            }
          }
        }
      }
    },
    "/user/stations/{stationId}/reviews": {
      "parameters": [
        {
          "in": "path",
          "name": "stationId",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "description": "The ID of the station"
        }
      ],
      "get": {
        "summary": "Get reviews submitted by the user for a specific station",
        "tags": [
          "user"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of reviews submitted by the user for the specified station",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": 1,
                    "userId": 1,
                    "stationId": "uuid",
                    "rating": 4,
                    "comment": "Great experience!",
                    "createdAt": "2024-01-20T12:30:00Z"
                  },
                  {
                    "id": 2,
                    "userId": 1,
                    "stationId": "uuid",
                    "rating": 5,
                    "comment": "Excellent service!",
                    "createdAt": "2024-01-22T08:45:00Z"
                  }
                ]
              }
            }
          },
          "401": {
            "$ref": "#/components/schemas/ErrorResponse"
          }
        }
      },
      "post": {
        "summary": "Submit a review for a station",
        "tags": [
          "user"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Review details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Review"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Review submitted successfully",
            "content": {
              "application/json": {
                "example": {
                  "id": 3,
                  "userId": 1,
                  "stationId": "uuid",
                  "rating": 3,
                  "comment": "Good service!",
                  "createdAt": "2024-01-25T10:15:00Z"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/ErrorResponse"
          }
        }
      }
    },
    "/management/users": {
      "get": {
        "summary": "Get a list of users (for management)",
        "description": "Retrieve a list of users for management purposes.",
        "tags": [
          "management-users"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/management/stations": {
      "get": {
        "summary": "Get a list of all bike stations",
        "tags": [
          "management-stations"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Station"
                },
                "example": {
                  "stations": [
                    {
                      "id": "uuid1",
                      "name": "Bike Station 1",
                      "location": {
                        "latitude": 40.7128,
                        "longitude": -74.006
                      },
                      "operational": true,
                      "parkingPlaces": [
                        {
                          "id": "uuid",
                          "occupied": false,
                          "bikeCategories": [
                            {
                              "name": "city_bike"
                            },
                            {
                              "name": "mountain_bike"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": "uuid2",
                      "name": "Bike Station 2",
                      "location": {
                        "latitude": 40.73,
                        "longitude": -73.995
                      },
                      "parkingPlaces": [
                        {
                          "id": "uuid",
                          "bikeCategories": [
                            "electric_bike",
                            "children_bike"
                          ]
                        }
                      ],
                      "operational": true
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Stations not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "Stations not found"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new bike station",
        "tags": [
          "management-stations"
        ],
        "requestBody": {
          "description": "Station details for creation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Station created successfully",
            "content": {
              "application/json": {
                "example": {
                  "id": "uuid",
                  "name": "New Bike Station",
                  "location": {
                    "latitude": 40.75,
                    "longitude": -73.995
                  },
                  "parkingPlaces": [
                    {
                      "id": "uuid",
                      "bikeCategories": [
                        "city_bike",
                        "mountain_bike"
                      ]
                    }
                  ],
                  "operational": true
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Invalid input data"
                }
              }
            }
          }
        }
      }
    },
    "/management/stations/{id}": {
      "get": {
        "summary": "Get details of a specific bike station",
        "tags": [
          "management-stations"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The ID of the station to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "example": {
                  "id": "uuid",
                  "name": "Bike Station 1",
                  "location": {
                    "latitude": 40.7128,
                    "longitude": -74.006
                  },
                  "operational": true,
                  "parkingPlaces": [
                    {
                      "id": "uuid",
                      "occupied": false,
                      "bikeCategories": [
                        {
                          "name": "City Bike"
                        },
                        {
                          "name": "Mountain Bike"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Station not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "Station not found"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update details of a specific bike station",
        "tags": [
          "management-stations"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The ID of the station to update"
          }
        ],
        "requestBody": {
          "description": "Updated station details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Station"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Station updated successfully",
            "content": {
              "application/json": {
                "example": {
                  "id": "uuid",
                  "name": "Updated Bike Station",
                  "location": {
                    "latitude": 40.75,
                    "longitude": -73.995
                  },
                  "parkingPlaces": [
                    {
                      "id": "uuid",
                      "bikeCategories": [
                        "city_bike",
                        "mountain_bike"
                      ]
                    }
                  ],
                  "operational": true
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Invalid input data"
                }
              }
            }
          },
          "404": {
            "description": "Station not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "Station not found"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a specific bike station",
        "tags": [
          "management-stations"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The ID of the station to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Station deleted successfully",
            "content": {
              "application/json": {
                "example": {
                  "error": "Station deleted successfully"
                }
              }
            }
          },
          "404": {
            "description": "Station not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "Station not found"
                }
              }
            }
          }
        }
      }
    },
    "/management/bike-categories": {
      "get": {
        "summary": "Get a list of all bike categories",
        "tags": [
          "management-bike models and categories"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "example": {
                  "bikeCategories": [
                    "mountain_bike",
                    "city_bike",
                    "electric_bike",
                    "children_bike"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Bike categories not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "Bike categories not found"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new bike category",
        "tags": [
          "management-bike models and categories"
        ],
        "requestBody": {
          "description": "Bike category details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BikeCategory"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Bike category created successfully",
            "content": {
              "application/json": {
                "example": {
                  "bikeCategory": "mountain_bike"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Invalid input data"
                }
              }
            }
          }
        }
      }
    },
    "/management/bike-categories/{categoryId}": {
      "get": {
        "summary": "Get a bike category by ID",
        "tags": [
          "management-bike models and categories"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The ID of the bike category to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Bike category retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BikeCategory"
                },
                "example": {
                  "id": "uuid",
                  "name": "City Bike"
                }
              }
            }
          },
          "404": {
            "description": "Bike category not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "Bike category not found"
                }
              }
            }
          }
        }
      }
    },
    "/management/bike-models": {
      "get": {
        "summary": "Get a list of all bike models",
        "tags": [
          "management-bike models and categories"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "example": {
                  "bikeModels": [
                    {
                      "name": "Mountain Bike XL",
                      "description": "A robust mountain bike for off-road adventures",
                      "wheelSize": 29.5,
                      "extraFeatures": [
                        "Shimano XT gears",
                        "Front suspension with 120mm travel"
                      ]
                    },
                    {
                      "name": "City Cruiser",
                      "description": "A comfortable city bike for daily commuting",
                      "wheelSize": 28,
                      "extraFeatures": [
                        "Built-in rear rack",
                        "Internal hub gears"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Bike models not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "Bike models not found"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new bike model",
        "tags": [
          "management-bike models and categories"
        ],
        "requestBody": {
          "description": "Bike model details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BikeModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Bike model created successfully",
            "content": {
              "application/json": {
                "example": {
                  "bikeModel": {
                    "name": "Mountain Bike XL",
                    "description": "A mountain bike for off-road adventures",
                    "wheelSize": 29.5,
                    "extraFeatures": [
                      "Shimano XT gears",
                      "Front suspension with 120mm travel"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Invalid input data"
                }
              }
            }
          }
        }
      }
    },
    "/management/bike-models/{id}": {
      "get": {
        "summary": "Get a bike model by ID",
        "tags": [
          "management-bike models and categories"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the bike model to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Bike model retrieved successfully",
            "content": {
              "application/json": {
                "example": {
                  "id": "uuid",
                  "name": "Mountain Bike XL",
                  "description": "A robust mountain bike for off-road adventures",
                  "wheelSize": 29.5,
                  "extraFeatures": [
                    "Shimano XT gears",
                    "Front suspension with 120mm travel"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Bike model not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "Bike model not found"
                }
              }
            }
          }
        }
      }
    },
    "/management/bike-models/{name}": {
      "put": {
        "summary": "Update a bike model",
        "tags": [
          "management-bike models and categories"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The name of the bike model to update"
          }
        ],
        "requestBody": {
          "description": "Updated bike model details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BikeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Bike model updated successfully",
            "content": {
              "application/json": {
                "example": {
                  "bikeModel": {
                    "name": "Mountain Bike XL",
                    "description": "An updated description",
                    "wheelSize": 29.5,
                    "extraFeatures": [
                      "Shimano XT gears",
                      "Front suspension with 120mm travel"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Invalid input data"
                }
              }
            }
          },
          "404": {
            "description": "Bike model not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "Bike model not found"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a bike model",
        "tags": [
          "management-bike models and categories"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The name of the bike model to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Bike model deleted successfully"
          },
          "404": {
            "description": "Bike model not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "Bike model not found"
                }
              }
            }
          }
        }
      }
    },
    "/management/bikes": {
      "get": {
        "summary": "Get all individual bikes",
        "tags": [
          "management-individual bikes"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "individualBikes": [
                    {
                      "id": "uuid",
                      "bikeType": "mountain_bike",
                      "status": "available",
                      "bikeModel": {
                        "name": "Mountain Bike XL",
                        "description": "A robust mountain bike for off-road adventures",
                        "wheelSize": 29.5,
                        "extraFeatures": [
                          "Shimano XT gears",
                          "Front suspension with 120mm travel"
                        ]
                      }
                    },
                    {
                      "id": "uuid",
                      "bikeType": "road_bike",
                      "status": "rented",
                      "bikeModel": {
                        "name": "Road Bike Pro",
                        "description": "High-performance road bike for speed enthusiasts",
                        "wheelSize": 28,
                        "extraFeatures": [
                          "Carbon fiber frame",
                          "Aero handlebars"
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "No individual bikes found"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new individual bike",
        "tags": [
          "management-individual bikes"
        ],
        "requestBody": {
          "description": "Bike details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IndividualBike"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Individual bike created successfully",
            "content": {
              "application/json": {
                "example": {
                  "individualBike": {
                    "id": "uuid",
                    "bikeType": "mountain_bike",
                    "status": "available",
                    "bikeModel": {
                      "name": "Mountain Bike XL",
                      "description": "A robust mountain bike for off-road adventures",
                      "wheelSize": 29.5,
                      "extraFeatures": [
                        "Shimano XT gears",
                        "Front suspension with 120mm travel"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Invalid input data"
                }
              }
            }
          }
        }
      }
    },
    "/management/bikes/{id}": {
      "put": {
        "summary": "Update an individual bike",
        "tags": [
          "management-individual bikes"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The ID of the individual bike to update"
          }
        ],
        "requestBody": {
          "description": "Updated bike details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IndividualBike"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Individual bike updated successfully",
            "content": {
              "application/json": {
                "example": {
                  "individualBike": {
                    "id": "uuid",
                    "bikeType": "mountain_bike",
                    "status": "unavailable",
                    "bikeModel": {
                      "name": "Mountain Bike XL",
                      "description": "A robust mountain bike for off-road adventures",
                      "wheelSize": 29.5,
                      "extraFeatures": [
                        "Shimano XT gears",
                        "Front suspension with 120mm travel"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Invalid input data"
                }
              }
            }
          },
          "404": {
            "description": "Individual bike not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "Individual bike not found"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an individual bike",
        "tags": [
          "management-individual bikes"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The ID of the individual bike to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Individual bike deleted successfully"
          },
          "404": {
            "description": "Individual bike not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "Individual bike not found"
                }
              }
            }
          }
        }
      }
    },
    "/management/reassign-bikes": {
      "post": {
        "summary": "Reassign individual bikes to stations and parking places",
        "tags": [
          "management-individual bikes"
        ],
        "requestBody": {
          "description": "Reassignment details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "stationId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID of the destination station"
                  },
                  "parkingPlaceId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID of the destination parking place"
                  },
                  "bikeIds": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "description": "List of individual bike IDs to reassign"
                  }
                },
                "required": [
                  "stationId",
                  "parkingPlaceId",
                  "bikeIds"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Individual bikes reassigned successfully",
            "content": {
              "application/json": {
                "example": {
                  "message": "Individual bikes reassigned to Station A, Parking Place 1"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Invalid input data"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "Station, parking place, or individual bike not found"
                }
              }
            }
          }
        }
      }
    }
  }
}